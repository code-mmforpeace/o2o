package com.ouver.o2o.dao;

import com.ouver.o2o.BaseTest;
import com.ouver.o2o.domain.Product;
import com.ouver.o2o.domain.ProductCategory;
import com.ouver.o2o.domain.ProductImg;
import com.ouver.o2o.domain.Shop;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.springframework.beans.factory.annotation.Autowired;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import static org.junit.Assert.assertEquals;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ProductDaoTest extends BaseTest {

    @Autowired
    private ProductDao productDao;
    @Autowired
    private ProductImgDao productImgDao;

    @Test
    public void insertBProductTest(){
        Shop shop1 = new Shop();
        shop1.setShopId(31L);
        Shop shop2 = new Shop();
        shop2.setShopId(32L);
        ProductCategory pc1 = new ProductCategory();
        pc1.setProductCategoryId(2L);
        ProductCategory pc2 = new ProductCategory();
        pc2.setProductCategoryId(3L);
        ProductCategory pc3 = new ProductCategory();
        pc3.setProductCategoryId(4L);
        Product product1 = new Product();
        product1.setProductName("测试1");
        product1.setProductDesc("测试Desc1");
        product1.setImgAddr("test1");
        product1.setPriority(0);
        product1.setEnableStatus(1);
        product1.setCreateTime(new Date());
        product1.setLastEditTime(new Date());
        product1.setShop(shop1);
        product1.setProductCategory(pc1);
        Product product2 = new Product();
        product2.setProductName("测试2");
        product2.setProductDesc("测试Desc2");
        product2.setImgAddr("test2");
        product2.setPriority(0);
        product2.setEnableStatus(0);
        product2.setCreateTime(new Date());
        product2.setLastEditTime(new Date());
        product2.setShop(shop1);
        product2.setProductCategory(pc2);
        Product product3 = new Product();
        product3.setProductName("测试3");
        product3.setProductDesc("测试Desc3");
        product3.setImgAddr("test3");
        product3.setPriority(0);
        product3.setEnableStatus(1);
        product3.setCreateTime(new Date());
        product3.setLastEditTime(new Date());
        product3.setShop(shop2);
        product3.setProductCategory(pc3);
        int effectedNum = productDao.insertProduct(product1);
        assertEquals(1, effectedNum);
        effectedNum = productDao.insertProduct(product2);
        assertEquals(1, effectedNum);
        effectedNum = productDao.insertProduct(product3);
        assertEquals(1, effectedNum);
    }

    @Test
    public void testCQueryProductById(){
        //初始化两个商品详情图实例作为productId为21商品下的详情图片
        //批量的添加到商品详情图
        long productId = 21L;
        ProductImg productImg1 = new ProductImg();
        productImg1.setImgAddr("删除图片1");
        productImg1.setImgDesc("测试删除图片1");
        productImg1.setPriority(1);
        productImg1.setCreateTime(new Date());
        productImg1.setProductId(productId);
        ProductImg productImg2 = new ProductImg();
        productImg2.setImgAddr("删除图片1");
        productImg2.setImgDesc("测试查询");
        productImg2.setPriority(1);
        productImg2.setCreateTime(new Date());
        productImg2.setProductId(productId);
        List<ProductImg> productImgList = new ArrayList<ProductImg>();
        productImgList.add(productImg1);
        productImgList.add(productImg2);
        int effectedNum = productImgDao.batchInsertProductImg(productImgList);
//        ProductImg productImg1 = new ProductImg();
//        productImg1.setImgAddr("删除图片1");
//        productImg1.setImgDesc("测试查询");
//        productImg1.setPriority(129);
//        productImg1.setCreateTime(new Date());
//        productImg1.setProductId(productId);
//
//        ProductImg productImg2 = new ProductImg();
//        productImg2.setImgAddr("删除图片2");
//        productImg2.setImgDesc("测试查询2");
//        productImg2.setPriority(129);
//        productImg2.setCreateTime(new Date());
//        productImg2.setProductId(productId);
//        List<ProductImg> productImgList = new ArrayList<ProductImg>();
//        productImgList.add(productImg1);
//        productImgList.add(productImg2);
//        int effectedNum = productImgDao.batchInsertProductImg(productImgList);
        assertEquals(2,effectedNum);
        //查询productId为21的商品下的详情图
        Product product = productDao.queryProductById(productId);
        //assertEquals(effectedNum,product.getProductImgList().size());
        //用完就删除
        int i1 = productImgDao.deleteProductImgByProductId(productId);
        assertEquals(effectedNum,i1);
    }

    @Test
    public void testDupdateProduct(){
        Product product = new Product();
        ProductCategory productCategory = new ProductCategory();
        Shop shop = new Shop();
        shop.setShopId(31L);
        productCategory.setProductCategoryId(3L);
        product.setProductId(21L);
        product.setShop(shop);
        product.setProductCategory(productCategory);
        product.setProductName("1.29测试修改");
        int i = productDao.updateProduct(product);
        assertEquals(1,i);
    }

    @Test
    public void testBqueryProductList() throws Exception{
        Product productCondition = new Product();
        List<Product> products = productDao.queryProductList(productCondition, 0, 5);

    }
}
